"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _Log = _interopRequireDefault(require("./Log"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

let idCounter = 1;

class Tab {
  constructor(name, ws) {
    this.name = name;
    this.ws = ws;

    _defineProperty(this, "logs", []);

    _defineProperty(this, "id", void 0);

    this.id = idCounter;
    idCounter += 1;
  }
  /**
   * Log a line to the web UI, a new line is automatically appended to the line
   */


  log(line) {
    const log = new _Log.default(line, new Date());
    this.logs.push(log);

    for (const client of this.ws.getWss().clients) {
      client.send(JSON.stringify({
        tab: this.id,
        payload: log
      }));
    }
  }

  toJSON() {
    return {
      id: this.id,
      name: this.name,
      logs: this.logs
    };
  }

}

exports.default = Tab;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9UYWIudHMiXSwibmFtZXMiOlsiaWRDb3VudGVyIiwiVGFiIiwiY29uc3RydWN0b3IiLCJuYW1lIiwid3MiLCJpZCIsImxvZyIsImxpbmUiLCJMb2ciLCJEYXRlIiwibG9ncyIsInB1c2giLCJjbGllbnQiLCJnZXRXc3MiLCJjbGllbnRzIiwic2VuZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0YWIiLCJwYXlsb2FkIiwidG9KU09OIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFQTs7Ozs7O0FBRUEsSUFBSUEsU0FBUyxHQUFHLENBQWhCOztBQUVlLE1BQU1DLEdBQU4sQ0FBVTtBQUt2QkMsRUFBQUEsV0FBVyxDQUFRQyxJQUFSLEVBQThCQyxFQUE5QixFQUFnRDtBQUFBLFNBQXhDRCxJQUF3QyxHQUF4Q0EsSUFBd0M7QUFBQSxTQUFsQkMsRUFBa0IsR0FBbEJBLEVBQWtCOztBQUFBLGtDQUpyQyxFQUlxQzs7QUFBQTs7QUFDekQsU0FBS0MsRUFBTCxHQUFVTCxTQUFWO0FBQ0FBLElBQUFBLFNBQVMsSUFBSSxDQUFiO0FBQ0Q7QUFFRDs7Ozs7QUFHQU0sRUFBQUEsR0FBRyxDQUFDQyxJQUFELEVBQWU7QUFDaEIsVUFBTUQsR0FBRyxHQUFHLElBQUlFLFlBQUosQ0FBUUQsSUFBUixFQUFjLElBQUlFLElBQUosRUFBZCxDQUFaO0FBQ0EsU0FBS0MsSUFBTCxDQUFVQyxJQUFWLENBQWVMLEdBQWY7O0FBRUEsU0FBSyxNQUFNTSxNQUFYLElBQXFCLEtBQUtSLEVBQUwsQ0FBUVMsTUFBUixHQUFpQkMsT0FBdEMsRUFBK0M7QUFDN0NGLE1BQUFBLE1BQU0sQ0FBQ0csSUFBUCxDQUFZQyxJQUFJLENBQUNDLFNBQUwsQ0FBZTtBQUN6QkMsUUFBQUEsR0FBRyxFQUFFLEtBQUtiLEVBRGU7QUFFekJjLFFBQUFBLE9BQU8sRUFBRWI7QUFGZ0IsT0FBZixDQUFaO0FBSUQ7QUFDRjs7QUFFT2MsRUFBQUEsTUFBUixHQUFpQjtBQUNmLFdBQU87QUFDTGYsTUFBQUEsRUFBRSxFQUFFLEtBQUtBLEVBREo7QUFFTEYsTUFBQUEsSUFBSSxFQUFFLEtBQUtBLElBRk47QUFHTE8sTUFBQUEsSUFBSSxFQUFFLEtBQUtBO0FBSE4sS0FBUDtBQUtEOztBQS9Cc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXdzIGZyb20gJ2V4cHJlc3Mtd3MnO1xuXG5pbXBvcnQgTG9nIGZyb20gJy4vTG9nJztcblxubGV0IGlkQ291bnRlciA9IDE7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhYiB7XG4gIHByaXZhdGUgbG9nczogTG9nW10gPSBbXTtcblxuICBwcml2YXRlIGlkOiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocHVibGljIG5hbWU6IHN0cmluZywgcHJpdmF0ZSB3czogZXdzLkluc3RhbmNlKSB7XG4gICAgdGhpcy5pZCA9IGlkQ291bnRlcjtcbiAgICBpZENvdW50ZXIgKz0gMTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb2cgYSBsaW5lIHRvIHRoZSB3ZWIgVUksIGEgbmV3IGxpbmUgaXMgYXV0b21hdGljYWxseSBhcHBlbmRlZCB0byB0aGUgbGluZVxuICAgKi9cbiAgbG9nKGxpbmU6IHN0cmluZykge1xuICAgIGNvbnN0IGxvZyA9IG5ldyBMb2cobGluZSwgbmV3IERhdGUoKSk7XG4gICAgdGhpcy5sb2dzLnB1c2gobG9nKTtcblxuICAgIGZvciAoY29uc3QgY2xpZW50IG9mIHRoaXMud3MuZ2V0V3NzKCkuY2xpZW50cykge1xuICAgICAgY2xpZW50LnNlbmQoSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICB0YWI6IHRoaXMuaWQsXG4gICAgICAgIHBheWxvYWQ6IGxvZyxcbiAgICAgIH0pKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHRvSlNPTigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IHRoaXMuaWQsXG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICBsb2dzOiB0aGlzLmxvZ3MsXG4gICAgfTtcbiAgfVxufVxuIl19