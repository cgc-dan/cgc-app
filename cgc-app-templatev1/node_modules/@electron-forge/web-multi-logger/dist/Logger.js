"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Tab", {
  enumerable: true,
  get: function () {
    return _Tab.default;
  }
});
exports.default = void 0;

require("source-map-support/register");

var _express = _interopRequireDefault(require("express"));

var _path = _interopRequireDefault(require("path"));

var _expressWs = _interopRequireDefault(require("express-ws"));

var _Tab = _interopRequireDefault(require("./Tab"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Logger {
  constructor(port = 9000) {
    this.port = port;

    _defineProperty(this, "app", (0, _express.default)());

    _defineProperty(this, "ws", void 0);

    _defineProperty(this, "tabs", []);

    _defineProperty(this, "server", null);

    this.registerRoutes();
  }

  registerRoutes() {
    this.ws = (0, _expressWs.default)(this.app);
    this.app.get('/rest/tabs', (req, res) => res.json(this.tabs));
    this.app.use('/xterm', _express.default.static(_path.default.resolve(require.resolve('xterm'), '../../../dist')));
    this.app.use(_express.default.static(_path.default.resolve(__dirname, '..', 'static')));
    this.app.ws('/sub', () => {});
  }
  /**
   * Creates a new tab with the given name, the name should be human readable
   * it will be used as the tab title in the front end.
   */


  createTab(name) {
    const tab = new _Tab.default(name, this.ws);
    this.tabs.push(tab);
    return tab;
  }
  /**
   * Start the HTTP server hosting the web UI
   */


  start() {
    return new Promise(resolve => {
      this.server = this.app.listen(this.port, () => resolve(this.port));
    });
  }
  /**
   * Stop the HTTP server hosting the web UI
   */


  stop() {
    if (this.server) this.server.close();
  }

}

exports.default = Logger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Mb2dnZXIudHMiXSwibmFtZXMiOlsiTG9nZ2VyIiwiY29uc3RydWN0b3IiLCJwb3J0IiwicmVnaXN0ZXJSb3V0ZXMiLCJ3cyIsImFwcCIsImdldCIsInJlcSIsInJlcyIsImpzb24iLCJ0YWJzIiwidXNlIiwiZXhwcmVzcyIsInN0YXRpYyIsInBhdGgiLCJyZXNvbHZlIiwicmVxdWlyZSIsIl9fZGlybmFtZSIsImNyZWF0ZVRhYiIsIm5hbWUiLCJ0YWIiLCJUYWIiLCJwdXNoIiwic3RhcnQiLCJQcm9taXNlIiwic2VydmVyIiwibGlzdGVuIiwic3RvcCIsImNsb3NlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFHQTs7Ozs7O0FBSWUsTUFBTUEsTUFBTixDQUFhO0FBUzFCQyxFQUFBQSxXQUFXLENBQVNDLElBQUksR0FBRyxJQUFoQixFQUFzQjtBQUFBLFNBQWJBLElBQWEsR0FBYkEsSUFBYTs7QUFBQSxpQ0FSbkIsdUJBUW1COztBQUFBOztBQUFBLGtDQUpYLEVBSVc7O0FBQUEsb0NBRkksSUFFSjs7QUFDL0IsU0FBS0MsY0FBTDtBQUNEOztBQUVPQSxFQUFBQSxjQUFSLEdBQXlCO0FBQ3ZCLFNBQUtDLEVBQUwsR0FBVSx3QkFBSSxLQUFLQyxHQUFULENBQVY7QUFDQSxTQUFLQSxHQUFMLENBQVNDLEdBQVQsQ0FBYSxZQUFiLEVBQTJCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjQSxHQUFHLENBQUNDLElBQUosQ0FBUyxLQUFLQyxJQUFkLENBQXpDO0FBRUEsU0FBS0wsR0FBTCxDQUFTTSxHQUFULENBQWEsUUFBYixFQUF1QkMsaUJBQVFDLE1BQVIsQ0FBZUMsY0FBS0MsT0FBTCxDQUFhQyxPQUFPLENBQUNELE9BQVIsQ0FBZ0IsT0FBaEIsQ0FBYixFQUF1QyxlQUF2QyxDQUFmLENBQXZCO0FBQ0EsU0FBS1YsR0FBTCxDQUFTTSxHQUFULENBQWFDLGlCQUFRQyxNQUFSLENBQWVDLGNBQUtDLE9BQUwsQ0FBYUUsU0FBYixFQUF3QixJQUF4QixFQUE4QixRQUE5QixDQUFmLENBQWI7QUFDQyxTQUFLWixHQUFOLENBQWtCRCxFQUFsQixDQUFxQixNQUFyQixFQUE2QixNQUFNLENBQUUsQ0FBckM7QUFDRDtBQUVEOzs7Ozs7QUFJQWMsRUFBQUEsU0FBUyxDQUFDQyxJQUFELEVBQWU7QUFDdEIsVUFBTUMsR0FBRyxHQUFHLElBQUlDLFlBQUosQ0FBUUYsSUFBUixFQUFjLEtBQUtmLEVBQW5CLENBQVo7QUFDQSxTQUFLTSxJQUFMLENBQVVZLElBQVYsQ0FBZUYsR0FBZjtBQUNBLFdBQU9BLEdBQVA7QUFDRDtBQUVEOzs7OztBQUdBRyxFQUFBQSxLQUFLLEdBQUc7QUFDTixXQUFPLElBQUlDLE9BQUosQ0FBcUJULE9BQUQsSUFBYTtBQUN0QyxXQUFLVSxNQUFMLEdBQWMsS0FBS3BCLEdBQUwsQ0FBU3FCLE1BQVQsQ0FBZ0IsS0FBS3hCLElBQXJCLEVBQTJCLE1BQU1hLE9BQU8sQ0FBQyxLQUFLYixJQUFOLENBQXhDLENBQWQ7QUFDRCxLQUZNLENBQVA7QUFHRDtBQUVEOzs7OztBQUdBeUIsRUFBQUEsSUFBSSxHQUFHO0FBQ0wsUUFBSSxLQUFLRixNQUFULEVBQWlCLEtBQUtBLE1BQUwsQ0FBWUcsS0FBWjtBQUNsQjs7QUE5Q3lCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBld3MgZnJvbSAnZXhwcmVzcy13cyc7XG5pbXBvcnQgaHR0cCBmcm9tICdodHRwJztcblxuaW1wb3J0IFRhYiBmcm9tICcuL1RhYic7XG5cbmV4cG9ydCB7IFRhYiB9O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dnZXIge1xuICBwcml2YXRlIGFwcCA9IGV4cHJlc3MoKTtcblxuICBwcml2YXRlIHdzITogZXdzLkluc3RhbmNlO1xuXG4gIHByaXZhdGUgdGFiczogVGFiW10gPSBbXTtcblxuICBwcml2YXRlIHNlcnZlcjogaHR0cC5TZXJ2ZXIgfCBudWxsID0gbnVsbDtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBvcnQgPSA5MDAwKSB7XG4gICAgdGhpcy5yZWdpc3RlclJvdXRlcygpO1xuICB9XG5cbiAgcHJpdmF0ZSByZWdpc3RlclJvdXRlcygpIHtcbiAgICB0aGlzLndzID0gZXdzKHRoaXMuYXBwKTtcbiAgICB0aGlzLmFwcC5nZXQoJy9yZXN0L3RhYnMnLCAocmVxLCByZXMpID0+IHJlcy5qc29uKHRoaXMudGFicykpO1xuXG4gICAgdGhpcy5hcHAudXNlKCcveHRlcm0nLCBleHByZXNzLnN0YXRpYyhwYXRoLnJlc29sdmUocmVxdWlyZS5yZXNvbHZlKCd4dGVybScpLCAnLi4vLi4vLi4vZGlzdCcpKSk7XG4gICAgdGhpcy5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsICdzdGF0aWMnKSkpO1xuICAgICh0aGlzLmFwcCBhcyBhbnkpLndzKCcvc3ViJywgKCkgPT4ge30pO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZXMgYSBuZXcgdGFiIHdpdGggdGhlIGdpdmVuIG5hbWUsIHRoZSBuYW1lIHNob3VsZCBiZSBodW1hbiByZWFkYWJsZVxuICAgKiBpdCB3aWxsIGJlIHVzZWQgYXMgdGhlIHRhYiB0aXRsZSBpbiB0aGUgZnJvbnQgZW5kLlxuICAgKi9cbiAgY3JlYXRlVGFiKG5hbWU6IHN0cmluZykge1xuICAgIGNvbnN0IHRhYiA9IG5ldyBUYWIobmFtZSwgdGhpcy53cyk7XG4gICAgdGhpcy50YWJzLnB1c2godGFiKTtcbiAgICByZXR1cm4gdGFiO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0YXJ0IHRoZSBIVFRQIHNlcnZlciBob3N0aW5nIHRoZSB3ZWIgVUlcbiAgICovXG4gIHN0YXJ0KCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZTxudW1iZXI+KChyZXNvbHZlKSA9PiB7XG4gICAgICB0aGlzLnNlcnZlciA9IHRoaXMuYXBwLmxpc3Rlbih0aGlzLnBvcnQsICgpID0+IHJlc29sdmUodGhpcy5wb3J0KSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU3RvcCB0aGUgSFRUUCBzZXJ2ZXIgaG9zdGluZyB0aGUgd2ViIFVJXG4gICAqL1xuICBzdG9wKCkge1xuICAgIGlmICh0aGlzLnNlcnZlcikgdGhpcy5zZXJ2ZXIuY2xvc2UoKTtcbiAgfVxufVxuIl19